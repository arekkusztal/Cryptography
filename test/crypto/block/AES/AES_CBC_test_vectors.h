#ifndef AES_CBC_TEST_VECTORS_H
#define AES_CBC_TEST_VECTORS_H

#include <stdint.h>
#include <CRYPTO_LIB_common.h>

struct AES_test_vector
{
	enum mode mode;
	uint8_t iv[16];
	struct {
		uint8_t data[32];
		uint8_t len;
	} key;
	struct
	{
		uint8_t data[4096];
		uint16_t len;
	} plaintext;
};

struct AES_test_vector AES_test_vector_1 = {
		.mode = CBC,
		.iv = { 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00 },
		.key = {
				.data = {
				0x54, 0x68, 0x61, 0x74, 0x73, 0x20, 0x6d, 0x79, 0x20, 0x4b, 0x75,
						0x6e, 0x67, 0x20, 0x46, 0x75 },
				.len = 16
		},
		.plaintext = {
				.data = { 0x54,0x77,0x6F,0x20,0x4F,0x6E,0x65,0x20,0x4E,0x69,0x6E,
						0x65,0x20,0x54,0x77,0x6F, 0x54,0x77,0x6F,0x20,0x4F,0x6E,0x65,0x20,0x4E,0x69,0x6E,
						0x35,0x20,0x54,0x77,0x6F },
				.len = 32
		}

};

static
uint8_t iv[16] = { 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
				0x00, 0x00, 0x00, 0x00
};
static
uint8_t skey[16] = { 0x54, 0x68, 0x61, 0x74, 0x73, 0x20, 0x6d, 0x79, 0x20, 0x4b, 0x75,
		0x6e, 0x67, 0x20, 0x46, 0x75 };
static
uint8_t datablock[16] = { 0x54,0x77,0x6F,0x20,0x4F,0x6E,0x65,0x20,0x4E,0x69,0x6E,
		0x65,0x20,0x54,0x77,0x6F };
static
uint8_t datablock_2[32] = { 0x54,0x77,0x6F,0x20,0x4F,0x6E,0x65,0x20,0x4E,0x69,0x6E,
		0x65,0x20,0x54,0x77,0x6F, 0x54,0x77,0x6F,0x20,0x4F,0x6E,0x65,0x20,0x4E,0x69,0x6E,
		0x35,0x20,0x54,0x77,0x6F };

#endif

/*
0x3D 0x4C 0x64 0x11 0x25 0x80 0x2A 0x3F 0xD9 0x49 0xBD 0x59 0x5E 0xA0 0x07 0x8B 
0xDB 0xF4 0x0D 0x64 0x80 0xC6 0x21 0x33 0xE1 0xEC 0xC6 0xA4 0x1B 0x4E 0xF4 0x18
* */
